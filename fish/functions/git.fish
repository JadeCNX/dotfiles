# Log
set -U _git_log_medium_format "%C(auto)%C(bold)Commit:%C(reset) %C(green)%H%C(red)%d%n%C(bold)Author:%C(reset) %C(cyan)%an <%ae>%n%C(bold)Date:%C(reset)   %C(blue)%ai (%ar)%C(reset)%n%+B"
set -U _git_log_oneline_with_author_format "%C(auto)%h %s%d %C(bold)%C(cyan)%aN%C(reset) %C(auto)%x1b[2m%ad%x1b[0m%Creset"
set -U _git_log_oneline_format "%C(auto)%h %s%d %x1b[2m%ad%x1b[0m%Creset"
set -U _git_log_brief_format "%C(green)%h%C(reset) %s%n%C(blue)(%ar by %an)%C(red)%d%C(reset)%n"

# Status
set -U _git_status_ignore_submodules "none"

# Git
abbr -a -U g 'git'

# Branch (b)
abbr -a -U gb 'git branch'
abbr -a -U gba 'git branch --all --verbose'
abbr -a -U gbc 'git checkout -b'
abbr -a -U gbD 'git branch --delete --force'
abbr -a -U gbd 'git branch --delete'
abbr -a -U gbf 'git branch --all --contains'
abbr -a -U gbL 'git branch --all --verbose'
abbr -a -U gbl 'git branch --verbose'
abbr -a -U gbM 'git branch --move --force'
abbr -a -U gbm 'git branch --move'
abbr -a -U gbR 'git branch --move --force'
abbr -a -U gbr 'git branch --move'
abbr -a -U gbS 'git show-branch --all'
abbr -a -U gbs 'git show-branch'
abbr -a -U gbV 'git branch --verbose --verbose'
abbr -a -U gbv 'git branch --verbose'
abbr -a -U gbX 'git branch --delete --force'
abbr -a -U gbx 'git branch --delete'

# Commit (c)
abbr -a -U gc 'git commit --verbose'
abbr -a -U gca 'git commit --verbose --all'
abbr -a -U gcam 'git commit --all --message'
abbr -a -U gcaS 'git commit --verbose --all --gpg-sign'
abbr -a -U gcf 'git commit --amend --reuse-message HEAD'
abbr -a -U gcF 'git commit --verbose --amend'
abbr -a -U gcfS 'git commit --amend --reuse-message HEAD --gpg-sign'
abbr -a -U gcFS 'git commit --verbose --amend --gpg-sign'
abbr -a -U gcl 'git-commit-lost'
abbr -a -U gcm 'git commit --message'
abbr -a -U gcmS 'git commit --message --gpg-sign'
abbr -a -U gcO 'git checkout --patch'
abbr -a -U gco 'git checkout'
abbr -a -U gcP 'git cherry-pick --no-commit'
abbr -a -U gcp 'git cherry-pick'
abbr -a -U gcpa 'git cherry-pick --abort'
abbr -a -U gcpc 'git cherry-pick --continue'
abbr -a -U gcpx 'git cherry-pick -x'
abbr -a -U gcR 'git reset "HEAD^"'
abbr -a -U gcr 'git revert'
abbr -a -U gcS 'git commit --verbose --gpg-sign'
abbr -a -U gcs 'git show'
abbr -a -U gcSa 'git commit -S --verbose --all'
abbr -a -U gcSf 'git commit -S --amend --reuse-message HEAD'
abbr -a -U gcSF 'git commit -S --verbose --amend'
abbr -a -U gcSm 'git commit -S --message'
abbr -a -U gcsS 'git show --pretty=short --show-signature'
abbr -a -U gcy 'git cherry --verbose --abbrev'
abbr -a -U gcY 'git cherry --verbose'

# Conflict (C)
abbr -a -U gCl 'git --no-pager diff --name-only --diff-filter=U'
abbr -a -U gCa 'git add $(gCl)'
abbr -a -U gCe 'git mergetool $(gCl)'
abbr -a -U gCO 'gCo $(gCl)'
abbr -a -U gCo 'git checkout --ours --'
abbr -a -U gCT 'gCt $(gCl)'
abbr -a -U gCt 'git checkout --theirs --'

# Data (d)
abbr -a -U gd 'git ls-files'
abbr -a -U gdc 'git ls-files --cached'
abbr -a -U gdi 'git status --porcelain --short --ignored | sed -n "s/^!! //p"'
abbr -a -U gdk 'git ls-files --killed'
abbr -a -U gdm 'git ls-files --modified'
abbr -a -U gdu 'git ls-files --other --exclude-standard'
abbr -a -U gdx 'git ls-files --deleted'

# Fetch (f)
abbr -a -U gf 'git fetch'
abbr -a -U gfa 'git fetch --all'
abbr -a -U gfc 'git clone'
abbr -a -U gfcr 'git clone --recurse-submodules'
abbr -a -U gfm 'git pull'
abbr -a -U gfr 'git pull --rebase --autostash'

# Flow (F)
abbr -a -U gFb 'git flow bugfix'
abbr -a -U gFf 'git flow feature'
abbr -a -U gFh 'git flow hotfix'
abbr -a -U gFi 'git flow init'
abbr -a -U gFl 'git flow release'
abbr -a -U gFs 'git flow support'

abbr -a -U gFfc 'git flow feature checkout'
abbr -a -U gFfd 'git flow feature diff'
abbr -a -U gFff 'git flow feature finish'
abbr -a -U gFfl 'git flow feature list'
abbr -a -U gFfm 'git flow feature pull'
abbr -a -U gFfp 'git flow feature publish'
abbr -a -U gFfr 'git flow feature rebase'
abbr -a -U gFfs 'git flow feature start'
abbr -a -U gFft 'git flow feature track'
abbr -a -U gFfx 'git flow feature delete'

abbr -a -U gFbc 'git flow bugfix checkout'
abbr -a -U gFbd 'git flow bugfix diff'
abbr -a -U gFbf 'git flow bugfix finish'
abbr -a -U gFbl 'git flow bugfix list'
abbr -a -U gFbm 'git flow bugfix pull'
abbr -a -U gFbp 'git flow bugfix publish'
abbr -a -U gFbr 'git flow bugfix rebase'
abbr -a -U gFbs 'git flow bugfix start'
abbr -a -U gFbt 'git flow bugfix track'
abbr -a -U gFbx 'git flow bugfix delete'

abbr -a -U gFlc 'git flow release checkout'
abbr -a -U gFld 'git flow release diff'
abbr -a -U gFlf 'git flow release finish'
abbr -a -U gFll 'git flow release list'
abbr -a -U gFlm 'git flow release pull'
abbr -a -U gFlp 'git flow release publish'
abbr -a -U gFlr 'git flow release rebase'
abbr -a -U gFls 'git flow release start'
abbr -a -U gFlt 'git flow release track'
abbr -a -U gFlx 'git flow release delete'

abbr -a -U gFhc 'git flow hotfix checkout'
abbr -a -U gFhd 'git flow hotfix diff'
abbr -a -U gFhf 'git flow hotfix finish'
abbr -a -U gFhl 'git flow hotfix list'
abbr -a -U gFhm 'git flow hotfix pull'
abbr -a -U gFhp 'git flow hotfix publish'
abbr -a -U gFhr 'git flow hotfix rebase'
abbr -a -U gFhs 'git flow hotfix start'
abbr -a -U gFht 'git flow hotfix track'
abbr -a -U gFhx 'git flow hotfix delete'

abbr -a -U gFsc 'git flow support checkout'
abbr -a -U gFsd 'git flow support diff'
abbr -a -U gFsf 'git flow support finish'
abbr -a -U gFsl 'git flow support list'
abbr -a -U gFsm 'git flow support pull'
abbr -a -U gFsp 'git flow support publish'
abbr -a -U gFsr 'git flow support rebase'
abbr -a -U gFss 'git flow support start'
abbr -a -U gFst 'git flow support track'
abbr -a -U gFsx 'git flow support delete'

# Grep (g)
abbr -a -U gg 'git grep'
abbr -a -U ggi 'git grep --ignore-case'
abbr -a -U ggl 'git grep --files-with-matches'
abbr -a -U ggL 'git grep --files-without-matches'
abbr -a -U ggv 'git grep --invert-match'
abbr -a -U ggw 'git grep --word-regexp'

# Index (i)
abbr -a -U giA 'git add --verbose --patch'
abbr -a -U gia 'git add --verbose'
abbr -a -U giD 'git diff --no-ext-diff --cached --word-diff'
abbr -a -U gid 'git diff --no-ext-diff --cached'
abbr -a -U gii 'git update-index --assume-unchanged'
abbr -a -U giI 'git update-index --no-assume-unchanged'
abbr -a -U giR 'git reset --patch'
abbr -a -U gir 'git reset'
abbr -a -U giu 'git add --verbose --update'
abbr -a -U giw 'git diff -U0 -w --no-color $argv | git apply --cached --ignore-whitespace --unidiff-zero -'
abbr -a -U gix 'git rm -r --cached'
abbr -a -U giX 'git rm -r --force --cached'

# Log (l)
abbr -a -U gl 'git log --topo-order --pretty=format:"$_git_log_medium_format"'
abbr -a -U glB 'git log --topo-order --all --graph --abbrev-commit --branches --pretty=format:"$_git_log_oneline_with_author_format"'
abbr -a -U glb 'git log --topo-order --graph --abbrev-commit --branches --pretty=format:"$_git_log_oneline_with_author_format"'
abbr -a -U glc 'git shortlog --summary --numbered'
abbr -a -U gld 'git log --topo-order --stat --patch --full-diff --pretty=format:"$_git_log_medium_format"'
abbr -a -U glD 'git log --topo-order --stat --patch --word-diff --full-diff --pretty=format:"$_git_log_medium_format"'
abbr -a -U glG 'git log --topo-order --all --graph --pretty=format:"$_git_log_oneline_with_author_format"'
abbr -a -U glg 'git log --topo-order --graph --pretty=format:"$_git_log_oneline_with_author_format"'
abbr -a -U glM 'git log --topo-order --all --graph --author=`git config user.name` --pretty=format:"$_git_log_oneline_format"'
abbr -a -U glm 'git log --topo-order --oneline --author=`git config user.name` --pretty=format:"$_git_log_oneline_format"'
abbr -a -U glms 'git log --topo-order --oneline --stat --author=`git config user.name` --pretty=format:"$_git_log_oneline_format"'
abbr -a -U glo 'git log --topo-order --pretty=format:"$_git_log_oneline_with_author_format"'
abbr -a -U glp 'git log --patch'
abbr -a -U glr 'git log --topo-order --pretty=format:"$_git_log_brief_format"'
abbr -a -U glS 'git log --show-signature'
abbr -a -U gls 'git log --topo-order --stat --pretty=format:"$_git_log_medium_format"'

# Merge (m)
abbr -a -U gm 'git merge'
abbr -a -U gma 'git merge --abort'
abbr -a -U gmC 'git merge --no-commit'
abbr -a -U gmF 'git merge --no-ff'
abbr -a -U gms 'git merge --squash'
abbr -a -U gmt 'git mergetool'

# Push (p)
abbr -a -U gp 'git push'
abbr -a -U gpa 'git push --all'
abbr -a -U gpA 'git push --autostash && git push --tags'
abbr -a -U gpc 'git push --set-upstream origin $(git-branch-current 2> /dev/null)'
abbr -a -U gpF 'git push --force'
abbr -a -U gpf 'git push --force-with-lease'
abbr -a -U gpp 'git pull origin $(git-branch-current 2> /dev/null) && git push origin $(git-branch-current 2> /dev/null)'
abbr -a -U gpt 'git push --tags'
abbr -a -U gpx 'git push --delete origin'

# Rebase (r)
abbr -a -U gr 'git rebase'
abbr -a -U gra 'git rebase --abort'
abbr -a -U grc 'git rebase --continue'
abbr -a -U gri 'git rebase --interactive'
abbr -a -U grs 'git rebase --skip'

# Remote (R)
abbr -a -U gR 'git remote'
abbr -a -U gRa 'git remote add'
abbr -a -U gRb 'git-hub-browse'
abbr -a -U gRl 'git remote --verbose'
abbr -a -U gRm 'git remote rename'
abbr -a -U gRp 'git remote prune'
abbr -a -U gRP 'git remote prune origin'
abbr -a -U gRs 'git remote show'
abbr -a -U gRu 'git remote update'
abbr -a -U gRx 'git remote rm'

# Stash (s)
abbr -a -U gs 'git stash'
abbr -a -U gsa 'git stash apply'
abbr -a -U gsd 'git stash show --patch --stat'
abbr -a -U gspush 'git stash push'
abbr -a -U gshm 'git stash push -m'
abbr -a -U gsl 'git stash list'
abbr -a -U gsL 'git-stash-dropped'
abbr -a -U gsp 'git stash pop'
abbr -a -U gsr 'git-stash-recover'
abbr -a -U gss 'git stash save --include-untracked'
abbr -a -U gsS 'git stash save --patch --no-keep-index'
abbr -a -U gsw 'git stash save --include-untracked --keep-index'
abbr -a -U gsx 'git stash drop'
abbr -a -U gsX 'git-stash-clear-interactive'

# Submodule (S)
abbr -a -U gS 'git submodule'
abbr -a -U gSa 'git submodule add'
abbr -a -U gSf 'git submodule foreach'
abbr -a -U gSi 'git submodule init'
abbr -a -U gSI 'git submodule update --init --recursive'
abbr -a -U gSl 'git submodule status'
abbr -a -U gSm 'git-submodule-move'
abbr -a -U gSs 'git submodule sync'
abbr -a -U gSu 'git submodule update --remote --recursive'
abbr -a -U gSx 'git-submodule-remove'

# Tag (t)
abbr -a -U gt 'git tag'
abbr -a -U gtl 'git tag -l'
abbr -a -U gts 'git tag --sort=objecttype --sort=-creatordate | git show --date=local --pretty="format:%C(auto)%h%C(green)%d %C(blue)%an %C(auto)%s %x1b[2m%ad%x1b[0m%Creset" -s --stdin'
abbr -a -U gtl 'git tag --list'
abbr -a -U gts 'git tag --sign'
abbr -a -U gtv 'git verify-tag'

# Working Copy (w)
abbr -a -U gwc 'git clean --dry-run'
abbr -a -U gwC 'git clean --force -d'
abbr -a -U gwD 'git diff --no-ext-diff --word-diff'
abbr -a -U gwd 'git diff --no-ext-diff'
abbr -a -U gwR 'git reset --hard'
abbr -a -U gwr 'git reset --soft'
abbr -a -U gws 'git status --ignore-submodules=$_git_status_ignore_submodules --short'
abbr -a -U gwS 'git status --ignore-submodules=$_git_status_ignore_submodules'
abbr -a -U gwX 'git rm -r --force'
abbr -a -U gwx 'git rm -r'

# Work Tree (W)
abbr -a -U gWa 'git worktree add'
abbr -a -U gWx 'git worktree remove'
abbr -a -U gWX 'git worktree remove -f'
abbr -a -U gWl 'git worktree list'

# github pr command
abbr -a -U ghpC 'gh pr comment'
abbr -a -U ghpc 'gh pr create'
abbr -a -U ghpd 'gh pr diff'
abbr -a -U ghpe 'gh pr edit'
abbr -a -U ghpl 'gh pr list'
abbr -a -U ghpm 'gh pr merge'
abbr -a -U ghpr 'gh pr review'
abbr -a -U ghps 'gh pr status'
abbr -a -U ghpv 'gh pr view'
abbr -a -U ghpx 'gh pr close'

# github secrets command
abbr -a -U ghsl 'gh secret list'
abbr -a -U ghss 'gh secret set'
abbr -a -U ghsx 'gh secret remove'

